name: CI

on: [push]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: --deny warnings
  JUST_VERBOSE: 1
  JUST_COLOR: always


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Run tests
        working-directory: rs
        run: nix develop --command just rs ci

  test-multi-platform:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
      fail-fast: false
    timeout-minutes: 10

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@nextest
      - uses: Swatinem/rust-cache@v2
      - name: Test ${{ matrix.os }}
        working-directory: rs
        run: cargo nextest run

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Clippy
        working-directory: rs
        run: cargo clippy --workspace --all-targets

      - name: Format
        working-directory: rs
        run: cargo fmt --all -- --check

  typos:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Check spelling of entire workspace
          uses: crate-ci/typos@v1.32.0

  msrv-nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
      - name: Check Rust minimum support version
        working-directory: rs
        run: nix develop --command cargo hack check --rust-version --workspace --all-targets --ignore-private

  msrv-reg:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: taiki-e/install-action@cargo-hack
        - name: Check Rust minimum support version
          working-directory: rs
          run: cargo hack check --rust-version --workspace --all-targets --ignore-private